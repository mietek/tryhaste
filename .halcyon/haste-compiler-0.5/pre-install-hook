#!/usr/bin/env bash

source "${HALCYON_DIR}/src.sh"


bootstrap_haste () {
	expect_vars HOME

	log 'Bootstrapping Haste'

	if ! haste-boot --local |& quote; then
		log_error 'Failed to bootstrap Haste'
		return 1
	fi
}


pre_install_hook () {
	expect_vars HOME HALCYON_BASE

	local tag source_dir install_dir data_dir
	expect_args tag source_dir install_dir data_dir -- "$@"

	# NOTE: This works around hastec expecting certain files in
	# HALCYON_BASE/js at run-time, for some unknown reason.

	copy_dir_into "${install_dir}${data_dir}" "${install_dir}${HALCYON_BASE}/js" || return 1

	# NOTE: Haste needs to be already installed, so that it can be
	# bootstrapped, in order to be archived as part of the application
	# install directory.

	copy_dir_into "${install_dir}${HALCYON_BASE}" "${HALCYON_BASE}" || return 1
	rm -rf "${HALCYON_BASE}/share/doc" || return 1

	# NOTE: Haste needs Cabal to generate HOME/.cabal/setup-exe-cache.
	# https://github.com/valderman/haste-compiler/issues/257

	populate_cabal_setup_exe_cache || return 1
	(
		cd "${source_dir}" &&
		bootstrap_haste
	) || return 1

	copy_file "${HALCYON_BASE}/booted" "${install_dir}${HALCYON_BASE}/booted" || return 1
	copy_file "${HALCYON_BASE}/bin/compiler.jar" "${install_dir}${HALCYON_BASE}/bin/compiler.jar" || return 1
	copy_dir_into "${HALCYON_BASE}/jsmods" "${install_dir}${HALCYON_BASE}/jsmods" || return 1
	copy_dir_into "${HALCYON_BASE}/include" "${install_dir}${HALCYON_BASE}/include" || return 1
	copy_dir_into "${HALCYON_BASE}/libraries" "${install_dir}${HALCYON_BASE}/libraries" || return 1
	copy_dir_into "${HALCYON_BASE}/packages" "${install_dir}${HALCYON_BASE}/packages" || return 1

	rm -rf "${HOME}/.haste" || return 1
}


pre_install_hook "$@"
